# Convention:
# - `generator false` returns the current item
# - `generator true` returns a generator for the next item

bind "gen-item" (func "gen" {gen false});
bind "gen-step" (func "gen" {gen true});
bindr "gen-skip" (func "n" "gen" {
    if (le n 0) {gen} {gen-skip (sub n 1) (gen-step gen)}
});

bindr "progression" (func "op" "start" "step" "next" {
    if next {progression op (op start step) step} {start}
});

bind "pow2" (func "n" {
    gen-item (gen-skip n (progression mul 1 2))
});

# 1024
pow2 10
